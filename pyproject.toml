# SPDX-License-Identifier: Apache-2.0
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 Aegis FraudStream Authors

[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[project]
name = "aegis-fraudstream"
urls = { "Homepage" = "https://github.com/alanusp/aegis-fraudstream", "Documentation" = "https://alanusp.github.io/aegis-fraudstream/", "Repository" = "https://github.com/alanusp/aegis-fraudstream" }
version = "1.3.0"
description = "Ultra-terminus: production-grade fraud scoring API with typed client, Helm PDB/HPA, and Grafana."
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Framework :: FastAPI",
  "Topic :: Security",
  "License :: OSI Approved :: Apache Software License"
]
authors = [{name = "Aegis FraudStream Authors"}]
dependencies = [
    "fastapi==0.115.0",
    "uvicorn[standard]==0.30.6",
    "pydantic==2.9.2",
    "pydantic-settings==2.6.0",
    "structlog==24.4.0",
    "typer==0.12.5",
    "prometheus-client==0.21.0",
    "python-multipart==0.0.9",
    "starlette==0.38.5",
    "httpx==0.27.2"
]
[project.optional-dependencies]
uvloop = ["uvloop>=0.19.0"]
kafka = ["aiokafka>=0.10.0"]
db = ["SQLAlchemy>=2.0", "psycopg2-binary>=2.9; platform_system!='Windows'", "aiosqlite>=0.20"]
otel = ["opentelemetry-instrumentation-fastapi>=0.48b0","opentelemetry-exporter-otlp>=1.26.0","opentelemetry-sdk>=1.26.0"]
dev = ["ruff==0.6.3","mypy==1.11.2","pytest==8.3.3","pytest-cov==5.0.0","pre-commit==4.0.1","bandit==1.7.9","pip-audit==2.7.3","hypothesis==6.112.1","schemathesis==3.34.6","locust==2.31.6"]
auth = ["PyJWT==2.9.0", "cryptography==43.0.1", "requests==2.32.3"]
cache = ["redis==6.4.0"]
telemetry = ["opentelemetry-sdk==1.27.0","opentelemetry-instrumentation-fastapi==0.48b0","opentelemetry-exporter-otlp==1.27.0","sentry-sdk==1.45.0"]

fuzz = ["atheris>=2.3.0; platform_python_implementation=='CPython'"]
[project.scripts]
aegis = "aegis_fraudstream.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["aegis_fraudstream", "aegis_client"]
include = ["aegis_fraudstream/py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-ra --cov=aegis_fraudstream --cov-report=term-missing --cov-fail-under=97"

# DUPLICATE MERGED: [project.optional-dependencies]
# DUPLICATE MERGED: uvloop = ["uvloop>=0.19.0"]
# DUPLICATE MERGED: kafka = ["aiokafka>=0.10.0"]
# DUPLICATE MERGED: db = ["SQLAlchemy>=2.0", "psycopg2-binary>=2.9; platform_system!='Windows'", "aiosqlite>=0.20"]
# DUPLICATE MERGED: otel = ["opentelemetry-instrumentation-fastapi>=0.48b0","opentelemetry-exporter-otlp>=1.26.0","opentelemetry-sdk>=1.26.0"]
# DUPLICATE MERGED: fuzz = ["atheris>=2.3.0; platform_python_implementation=='CPython'"]
# DUPLICATE MERGED: 
# Dev license tooling
# DUPLICATE MERGED: dev-extra = ["pip-licenses>=4.3.4"]
# DUPLICATE MERGED: 
[tool.interrogate]
fail-under = 85
exclude = ["tests","docs","bench","examples","build","dist",".venv"]
ignore-init-method = true
ignore-init-module = true
verbose = 1

# test helpers
[tool.extra]
helpers = ["fakeredis>=2.23"]

# runtime JSON acceleration
dependencies = ["orjson>=3.10.0", "PyYAML"]

[tool.mypy]
python_version = "3.11"
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
packages = ["aegis_fraudstream"]
asyncio_mode = "auto"
[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
commit_parser = "angular"
changelog_file = "CHANGELOG.md"
build_command = "python -m pip install -U build && python -m build"
tag_format = "v{version}"
upload_to_release = true
upload_to_pypi = false
